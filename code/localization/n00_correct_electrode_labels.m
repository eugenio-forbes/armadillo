%%% This function uses a series of regular expression string replacements
%%% to standardize input electrode localization labels made by neurologist
%%% into a clean set of anatomical labels.

function labels = n00_correct_electrode_labels(labels)

%%% Steps to standardize labels:

%%% Make all characters upper case so that when certain label patterns are
%%% corrected, they can be safeguarded with lower case characters. This
%%% also makes it easier to write string replacement rules.
labels = upper(labels);

%%% Starting regexprep series of replacements to make things easier
%%% Remove 'S from words. 
%%% Replace '/' or 'NEAR' with any amount of preceding or succeeding spaces with ' VS ',
%%% 'VS' between any amount of spaces and between two different numbers to underscore,
%%% & to AND. Remove any non-whitespace or alphanumerical/underscore
%%% characters.
%%% Each pair below is expression and replacement
starting_series = [{'(\b|\s)[''â€™]S\b', ''};{'\s*/\s*', ' VS '}; {'\s*NEAR\s*', ' VS '}; {'(\d+)\s*VS\s*(\d+)', '$1_$2'}; {'&', 'AND'}; {'[^\w\s]', ''}];
labels = regexprep_series(labels, starting_series);

%%% Remove leading or trailing spaces
labels = strtrim(labels);

%%% Typo correction and pattern standardization series
standard_series = ...
    [{'AMY\w+', 'Amygdala'};{'\<ANG\w+(\sG\w+)?', 'Angular Gyrus'};...  
    {'\<AN\s?T\w*', 'Anterior'};{'\<AR?M\>', 'Arm'};...
    {'BRAIN STEM', 'Brain Stem'};{'(INFRA.?)?CAL[^L]\w+(\s\w{3, })?', 'Calcarine Sulcus'};...
    {'C[IO]N?G\w*', 'Cingulate'};{'COL\w+AL', 'Collateral'};...
    {'COR\w+\sCA\w+', 'Corpus Callosum'};{'C\w+N\w+S', 'CUNEUS'};...
    {'(?<!PR?E\s?)CUN\w+', 'Cuneus'};{'DURA', 'Dura Mater'};{'ENCE\w+LE', 'Encephalocele'};...
    {'(\w{3, }\s)?ENCE(?!\w+LE)\w+', 'Encephalomalacia'};{'\<E.*RH\w+(\s?C\w+)?', 'Entorhinal Cortex'};...
    {'\<EY\w+', 'Eye'};{'FIS\w+', 'Fissure'};{'FRO\w+|F[PR]\>', 'FRONTAL'};...
    {'(?<!(PR?E\s*|\w))FRO\w+', 'Frontal'};{'FUS\w+(\s*G\w+)?', 'Fusiform Gyrus'};...
    {'GY\w+', 'Gyrus'};{'(\w{3, }\s)?HET\w+', 'Heterotopia'};{'(?<!PARA.?)HIP[PO]\w*', 'Hippocampus'};...
    {'IN\w+OR', 'Inferior'};{'SS II', 'Anterior Insula'};{'IPL|I\w+\sP\w+\sL\w+', 'Inferior Parietal Lobule'};...
    {'IN\w+LA\w*', 'Insula'};{'\<IH[FR]\>', 'Interhemispheric Fissure'};...
    {'\<IPS\>', 'Intraparietal Sulcus'};{'ISTH\w+(\sPER\sBL)?', 'Isthmus'};...
    {'J\w+N', 'Junction'};{'\<LAT\w*', 'Lateral'};{'\<L[VC]\>', 'Lateral Ventricle'};...
    {'(PE.*)L\w+ON\w+', 'Lesion'};{'(\w{3, }\s)?L\w+[Oo][Nn]\>(\s\w{3, })?', 'Lesion'};...
    {'\<LIN\w+(\sG\w+)?', 'Lingual Gyrus'};{'MED\w*', 'Medial'};{'MES\w*', 'Mesial'};...
    {'MID(?![CHI])\w+|MID', 'Middle'};{'\<OC\w+TAL(?!\sS)(\s[CG]\w+)?', 'Occipital Gyrus'};...
    {'L\w+\sOc\w+', 'Middle Occipital'};{'\<MOG\>', 'Middle Occipital Gyrus'};...
    {'\<OC\w+TAL\sS\w+', 'Occipital Sulcus'};...
    {'\<(OC\w+TO\s?T\w+|TO)\s*J\w+', 'Occipitotemporal Junction'};
    {'(L\w+\s)?(OC\w+TO\s?T\w+|TO)\sS\w+', 'Occipitotemporal Sulcus'};...
    {'L\w+\s(OC\w+TO\s?T\w+|TO)\s[CFS]\w+', 'Occipitotemporal Sulcus'};...
    {'OLF\w+', 'Olfactory'};{'OPERCULUM', 'Operculum'};...
    {'(P\s?|PAR[CS]\s)OPER\w+', 'Pars Opercularis'};{'OPERCULARIS', 'Opercularis'};...
    {'TRI\w+\sVS\sOP[ER](?!\w+M)\w+', 'Triangularis VS Pars Opercularis'};
    {'OP[ER]\w+', 'Operculum'};{'\<OR?B(?!\w*LIS)\w*\sS\w+', 'Orbital Sulcus'};...
    {'\<OR?B(?!\w*LIS|\w*\sS)\w*(\s?G\w+)?', 'Orbital Gyrus'};...
    {'OR?B\w*LIS', 'Orbitalis'};{'\<MARG\w+\s\S\w+', 'Marginal Sulcus'};...
    {'PARAC\w+\sL\w+', 'Paracentral Lobule'};{'PARA\s?HIP[PO]\w*(\sGy\w+)?', 'PHG'};...
    {'PARIETAL', 'Parietal'};{'(T?PO\s|PA\w+TO\w+\s)J\w+(\sL\w+)?', 'Parietooccipital Junction'};...
    {'(?<!L\w+\s)([PT]O\s|PA\w+TO\w+\s)[SF]\w+', 'Parietooccipital Fissure'};...
    {'PAR[CST]|\<P\>', 'Pars'};{'P[ER][ER]I\s?', 'PERI'};...
    {'PE\w+RH\w+(\s[CG]\w+)?', 'Perirhinal Cortex'};{'SWAL\w+', 'PHARYNX MOTOR'};...
    {'POST(?!\s?C[EG])\w*', 'Posterior'};{'\<POLE\>', 'Pole'};...
    {'\<P[IO]\w+OR', 'Posterior'};{'PR?E\s?CU\w+', 'Precuneus'};...
    {'PR?E\s?FR\w+L', 'Prefrontal'};{'PR?E\s?MOTOR', 'Premotor'};{'PRE\s?SMA', 'PRESMA'};...
    {'(?<!\s)PUT\w+', 'Putamen'};{'\<R\w+US', 'Rectus'};...
    {'(\w{3, }\s)?\<R\w+ON(\s[EC]\w+)?', 'Resection'};{'ROS\w+AL(\sG\w+)?', 'Rostral Gyrus'};...
    {'\<SGS\>', 'SFS'};{'\<SCG\>', 'Central Operculum'};{'[CS]ULC\w+', 'Sulcus'};...
    {'SUP\w+OR', 'Superior'};{'SPL|S\w+\sP\w+\sL\w+', 'Superior Parietal Lobule'};...
    {'SPS', 'Superior Parietal Sulcus'};{'SMG|SUPRA\s?M\w+(\s?G\w+)?', 'Supramarginal Gyrus'};...
    {'(PAR\sOF\s)?(\<SF\>|SY\w+\sF\w+)', 'Sylvian Fissure'};{'THA\w+', 'Thalamus'};...
    {'TOES?', 'Toes'};{'TEMP\w*|\<T\>', 'Temporal'};{'\<TUBER\>', 'Tuber'};...
    {'S\w+\s?B\w+\s?A\w+\s?A\w+\s?P\w+\s?O\w*\s?G\w*', 'Transvere Orbital Sulcus'};...
    {'\<TRI\w+', 'Triangularis'};{'(L\w+\s)?(P[ER][ER]I\s?)?VEN\w+', 'Lateral Ventricle'};...
    {'W[MK]|W\w+\sM\w+', 'WM'}];

labels = regexprep_series(labels, standard_series);

%%% Deletions
patterns_to_delete = {'1ST', '2ND', '3RD', 'ABOVE', 'AREA', 'BASAL', 'BOTTOM', ...
    'CLOSE TO', 'DEPTH', 'Inferior SURFACE', 'Lateral SURFACE', 'Superior Anterior TO', 'Anterior TO', ...
    'Superior TO', 'Posterior TO', 'HEMISPHERE', 'PRIMARY', 'THE', ...
    'TRANSVERSE Temporal Gyrus', 'SHORT Gyrus', 'VS MEG DIPOLE', 'WERNICKE'};
expression_delete = strjoin(patterns_to_delete, '|');
labels = regexprep(labels, expression_delete, '');

%%% Following deletions removal of extra leading and trailing spaces,
%%% separation of words based on location of lower case characters
post_deletion_series = [{'\s{2, }', ' '};{'([a-z])([A-Z])', '$1 $2'};{'([A-Z])([A-Z])([a-z])', '$1 $2$3'}];
for idx = 1:size(post_deletion_series, 1)
    labels = regexprep(labels, post_deletion_series{idx, 1}, post_deletion_series{idx, 2});
end
labels = strtrim(labels);

%%% A few standardizations before beginning processing of sensory/motor
%%% cortex label patterns
pre_sensorymotor_series = [{'OUT(?=\s[^V])', 'OUT VS'};
    {'(Operculum)\s(?!(VS|Pars))(\w+)', '$1 VS $2'};...
    {'(Sulcus)\sMe\w+)', '$1'};...
    {'(?<!(PRE|POST)\s?)(CS|CE.+Sulcus)(?!F)', 'Central Sulcus'};...
    {'PRE\s?(CS|CE.+Su\w+)', 'Precentral Sulcus'};...
    {'POST\s?(CS|CE.+Su\w+)', 'Postcentral Sulcus'};...
    {'HES\w+(\sG\w+)?', 'Heschl Gyrus'};...
    {'(Poste\w+\s)?(?<!PL\w+\s)(Te\w+\s)(VS\s)?(H\w+\sG\w+)', 'Posterior Temporal Operculum VS Heschl Gyrus'};...
    {'PLAN\w+\sT\w+(\sS)?', 'Planum Temporale'}];
labels = regexprep_series(labels, pre_sensorymotor_series);

%%% Sensory/Motor Series: First series to standardize patterns, then
%%% several loops of replacements accounting for all labeled body parts.
body_parts = {'PHARYNX', 'JAW', 'FACE', 'Eye', 'FINGERS', 'HAND', 'Arm', 'SHOULDER', ...
    'NECK', 'TRUNK', 'INTRAABDOMINAL', 'HIP', 'KNEE', 'LEG', 'Toes'};
sensorymotor_series = [{'POST\s?C(G|E\w+\sG\w+)(\sMe\w+)?', 'SENSORY'};...
    {'PRE\s?C(G|E\w+\sG\w+)(\sMe\w+)?', 'MOTOR'};...
    {'(S\w+Y)\s([^V]\w+)', '$2 $1'};...
    {'(MOTOR)\s([^V]\w+)', '$2 $1'};...
    {'(S\w+Y)(\sVS)?\sS\w+Y', '$1'};...
    {'(MOTOR)(\sVS)?\sMOTOR', '$1'};...
    {'(\w+)\s(MOTOR|S\w+Y)\sVS\s(MOTOR|S\w+Y)', '$1 $2 VS $1 $3'}];
labels = regexprep_series(labels, sensorymotor_series);

b = labels;
if any(contains(b, 'Motor Core'))
    a = 1;
end

%%% Body part processing loops
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(\w{1, 5}entral Sulcus\s)(', body_parts{idx}, ')(\sMOTOR|\sS\w+Y)'], '$1$2 VS $2$3');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(Precentral Sulcus\s)(VS.+)(', body_parts{idx}, ')(\sMOTOR|\sS\w+Y)?'], '$1$3 $2$3 MOTOR');
    labels = regexprep(labels, ['(Postcentral Sulcus\s)(VS.+)(', body_parts{idx}, ')(\sMOTOR|\sS\w+Y)?'], '$1$3 $2$3 SENSORY');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(?<!Cingulate\s)(Sulcus)\s?VS\s?(', body_parts{idx}, ')'], '$1 $2 VS $2');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(?<=MOTOR.*)(?<!Sulcus\s)(', body_parts{idx}, ')(?!\s(MOTOR|S\w+Y))'], '$1 MOTOR');
    labels = regexprep(labels, ['(?<!Sulcus\s)(', body_parts{idx}, ')(?!\s(MOTOR|S\w+Y))(?=.*MOTOR)'], '$1 MOTOR');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(?<=S\w+Y.*)(?<!Sulcus\s)(', body_parts{idx}, ')(?!\s(MOTOR|S\w+Y))'], '$1 SENSORY');
    labels = regexprep(labels, ['(?<!Sulcus\s)(', body_parts{idx}, ')(?!\sS\w+Y)(?!\s(MOTOR|S\w+Y))'], '$1 SENSORY');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(', body_parts{idx}, ')\s?(M\w+|S\w+)\s?VS\s?(\w+tral\s?Sulcus)(?!\s?[^V])'], '$1 $2');
end
for idx = 1:length(body_parts)
    labels = regexprep(labels, ['(Precentral)\s?(Sulcus)\s?(', body_parts{idx}, ')'], '$3 MOTOR');
    labels = regexprep(labels, ['(Postcentral)\s?(Sulcus)\s?(', body_parts{idx}, ')'], '$3 SENSORY');
    labels = regexprep(labels, ['(Central)\s?(Sulcus)\s?(', body_parts{idx}, ')'], '$3');
end
for idx = 1:length(body_parts)
    body_part = body_parts{idx};
    new_body_part = [upper(body_part(1)), lower(body_part(2:end))];
    labels = regexprep(labels, [body_part, '\s?MOTOR'], [new_body_part, ' Motor']);
    labels = regexprep(labels, [body_part, '\s?S\w+Y'], [new_body_part, ' Sensory']);
    labels = regexprep(labels, ['\<', body_part, '\>'], new_body_part);
end
labels = regexprep(labels, 'VS\sM\w+[Rr]\s(VS\s\w{3, }\sM\w+[Rr])', '$1');
labels = regexprep(labels, 'VS\sS\w+[Yy]\s(VS\s\w{3, }\sS\w+[Yy])', '$1');
labels = regexprep(labels, 'Precentral\s?Sulcus', 'Motor');
labels = regexprep(labels, 'Postcentral\s?Sulcus\s?(Mesial)?', 'Sensory');

%%% Body part series to merge a few specific ones
bodypart_series = [{'Intraabdominal', 'Gut'};{'Pharynx', 'Face'};...
    {'Jaw', 'Face'};{'Eye', 'Face'};{'Fingers', 'Hand'};{'Shoulder', 'Upper Body'};...
    {'Arm', 'Upper Body'};{'Neck Motor', 'Face Motor'};{'Neck Sensory', 'Upper Body Sensory'};...
    {'Trunk', 'Upper Body'};{'\<Hip\>', 'Lower Body'};{'Knee', 'Lower Body'};{'Leg', 'Lower Body'};...
    {'Toes', 'Lower Body'}];
labels = regexprep_series(labels, bodypart_series);

%%% Frontal Lobe Series
frontal_series = [{'IF[GS]\sVS\sIF[GS]', 'IFS VS IFG'};{'IFG\sVS\sPars', 'IFG Pars'};...
    {'(IF[GS])\s?(Pars\s?[TO][rp]\w+)\s?VS\s?(Pars\s?[TO][rp]\w+)', '$1 $2 VS $1 $3'};...
    {'(IF[GS])\s?VS\s?(IF[GS])\s?(Pars\s[TO][rp]\w+)', '$1 $3 VS $2 $3'};...
    {'(Pars\s[TO]\w+)\sVS\s(IF[GS])(?!\s\w)', '$1 VS $2 $1'};...
    {'(IF[GS]\sPars\s[TO][rp]\w+\sVS\sP\w+\sS\w+)(?!\s[^V\s])', '$1 Face'};...
    {'(IF[GS])\sVS\s(Motor)(?!\s[^V\s])', '$1 Premotor VS Face $2'};...
    {'MGF', 'MFG'};{'MFS', 'SFS'};{'\s?BA\s?(46|8_9)', ''};{'MTG Prefrontal', 'MFG Prefrontal'};...
    {'Pole\s?Me\w+', 'Pole'};{'Sulcus\s?Me\w+', 'Sulcus'};{'An\w+\s?Me\w+', 'Mesial Anterior'};...
    {'SF[GS]\sVS\sSF[GS]', 'SFS VS SFG'};{'Me\w+\sSFG', 'SFG Mesial'};...
    {'[MS]FG\sMe\w+', 'SFG Mesial'};{'(Med\w+)\s?VS\s?(An\w+)\s?(O\w+\s?G\w+)', '$1 $3 VS $2 $3'};...
    {'(?<!SFG\s?)Mes\w+(?!\s?Or\w+)', 'SFG Mesial'};...
    {'([MS]FG|Me\w+|An\w+)\s?Fr\w+', '$1 Prefrontal'};...
    {'([MS]FG|Me\w+)\s?An\w+\s?Pr\w+', '$1 Anterior'};...
    {'MFG\s?PR?E\s?M\w+', 'MFG Premotor'};...
    {'MFG\sPremotor\s(?!VS)', 'MFG Premotor VS'};...
    {'(MFG\sPre\w+)\sVS\s(Motor|Sensory)\s?(?![^V])', '$1 VS Hand $2'};...
    {'(SFG\sPre\w+)\sVS\s(Motor|Sensory)\s?(?![^V])', '$1 VS Upper Body $2'};...
    {'(MFG)\sVS\s(Motor|Sensory)(?!\s[^V\s])', '$1 Premotor VS Hand $2'};...
    {'(SFG)\sVS\s(Motor|Sensory)(?!\s[^V\s])', '$1 Premotor VS Upper Body $2'};...
    {'([IMS]F[GS])\s?(Pre[fm]\w+)\s?VS\s?(Pre[fm]\w+)', '$1 $2 VS $1 $3'};...
    {'([IMS]F[GS])\s?VS\s?([IMS]F[GS])\s?(Pre[fm]\w+|An\w+)', '$1 $3 VS $2 $3'};...
    {'(?<=Pref\w+\sVS\s)([IMS]F[GS])(?!\s\w)', '$1 Prefrontal'};...
    {'(?<=Prem\w+\sVS\s)([IMS]F[GS])(?!\s\w)', '$1 Premotor'};...
    {'(IFS)\s?(Pars\s?[OT][rp]\w+)', '$1 Prefrontal'}];
labels = regexprep_series(labels, frontal_series);

%%% Insula Series
insula_series = [{'Tuber\s?VS\s?CSF', 'CSF VS Tuber'};...
    {'SH\w+\s?Ins\w+\s?(G\w+)?', 'Anterior Insula'};...
    {'(?<![^S]\s)(Ins\w+)(?=\s?VS.*Frontal)', 'Anterior Insula'};...
    {'(?<![^S]\s)(An\w+|Mi\w+|Poste\w+)\s?VS\s?(An\w+|Mi\w+|Poste\w+)\s?(Ins\w+)', '$1 $3 VS $2 $3'};...
    {'(An\w+|Mi\w+|Po\w+)\s?(Ins\w+)', '$2 $1'};...
    {'(?<!Pre\w+\s)(CSF|Sulcus)\s?VS\s?(Ins\w+)', 'Sylvian Fissure VS $2'};...
    {'(Ins\w+)\s?(An\w+\s?|Mi\w+\s?|Po\w+\s?|\s?)VS\s?(CSF|Sulcus)', '$1 $2VS Sylvian Fissure'}];
labels = regexprep_series(labels, insula_series);

%%% Operculum Series
operculum_series = [{'(M[Oo]\w+\sVS)\s(Op\w+)', '$1 Central $2'};...
    {'(?<![FTCP]\w+\s)(Op\w+\sVS\sM\w+)', 'Central $1'};...
    {'([CPT]\w+[Ll])\sVS\s([CPT]\w+[Ll])\s(Op\w+)', '$1 $3 VS $2 $3'};...
    {'C\w+L\sOp\w+', 'Central Operculum'};...
    {'(C\w+l\sOp\w+\s?VS)\s?(S\w+Y)', '$1 Face Sensory'};...
    {'(C\w+l\sOp\w+\s?VS)\s?(MOTOR)', '$1 Face Motor'};...
    {'Pars\s([TO]\w+s)\sVS\s([TO]\w+s)', 'Pars $1 VS Pars $2'};...
    {'(?<=In\w+\s?An\w+(\s?RE\w+)?\s?VS\s?)(Te\w+\s?Op\w+)', 'Anterior $1'};...
    {'(?<=In\w+\s?Po\w+(\s?RE\w+)?\s?VS\s?)(Te\w+\s?Op\w+)', 'Posterior $1'};...
    {'(?<![^S]\s)(Te\w+\s?Op\w+)(?=\s?VS\s?(Hes\w+|Pla\w+))', 'Posterior $1'};...
    {'(An\w+|Pos\w+)\s?(Par\w+\s?Op\w+)', '$2'};...
    {'(?<!Pre\w+\s)(CSF|Sulcus)\s?VS\s?(\w+\sOperculum)', 'Sylvian Fissure VS $2'};...
    {'(Frontal\s?Operculum)\s?(Pars\s?\w+)\s?VS\s?(Pars\s?\w+)', '$1 $2 VS $1 $3'};...
    {'(Frontal\s?Operculum)\s?VS\s?(Pars\s?\w+)', '$1 $2 VS IFG $2'};...
    {'(Frontal\s?Operculum)\s?(Pars\s?Orbitalis)', '$1'};...
    {'(Frontal\s?Operculum)\s?(Pars\s?Triangularis)', '$1 Anterior'};...
    {'(Frontal\s?Operculum)\s?(Pars\s?Opercularis)', '$1 Posterior'};...
    {'(?<!\w\s)Middle\s?VS\s?(Fro\w+)\s?(Op\w+)', 'Central $2 VS $1 $2'};...
    {'CSF\s?VS\s?Sulcus', 'Sylvian Fissure'};{'Sulcus\s?CSF', 'Sylvian Fissure'};...
    {'CSF\s?Sulcus', 'Sylvian Fissure'};{'CSF|SCF', 'Sylvian Fissure'};...
    {'(Operculum)\s?VS\s?Sulcus', '$1 VS Sylvian Fissure'};...
    {'(Hes\w+\s?Gy\w+)\s?VS\s?Sulcus', '$1 VS Sylvian Fissure'};...
    {'(Pla\w+\s?Te\w+)\s?VS\s?Sulcus', '$1 VS Sylvian Fissure'}];
labels = regexprep_series(labels, operculum_series);

%%% Temporal Lobe Series
temporal_series = [{'STS STS', 'STS'};...
    {'IT[GS]\sVS\sIT[GS]', 'ITS VS ITG'};...
    {'MT[GS]\sVS\sMT[GS]', 'MTG'};{'MTS', 'STS'};...
    {'(MTG)\s?(Resection)', '$1 VS $2'};...
    {'ST[GS]\sVS\sST[GS]', 'STS VS STG'};...
    {'(?<![^S]\s)(An\w+|Mi\w+|Poste\w+)\s?VS\s?(An\w+|Mi\w+|Poste\w+)\s?([IMS]T[GS])', '$1 $3 VS $2 $3'};...
    {'(An\w+|Mi\w+|Po\w+)\s?([IMS]T[GS])', '$2 $1'};...
    {'([IMS]T[GS])\s?(An\w+|Mi\w+|Poste\w+)\s?VS\s?(An\w+|Mi\w+|Poste\w+)(?!\s?[^V])', '$1 $2 VS $1 $3'};...
    {'([IMS]T[GS])\s?VS\s?([IMS]T[GS])\s?(An\w+|Mi\w+|Po\w+)', '$1 $3 VS $2 $3'};...
    {'(?<=An\w+\sVS\s)([IMS]T[GS])(?!\s\w)', '$1 Anterior'};...
    {'(?<=Mi\w+\sVS\s)([IMS]T[GS])(?!\s\w)', '$1 Middle'};...
    {'(?<=Po\w+\sVS\s)([IMS]T[GS])(?!\s\w)', '$1 Posterior'}];
labels = regexprep_series(labels, temporal_series);

%%% Cingulate Series
cingulate_series = [{'Cing\w+\s?Gy\w+\s?(An\w+|Mi\w+|Po\w+)', '$1 Cingulate'};...
    {'(An\w+|Mi\w+|Po\w+)\s?Cing\w+\s?Gy\w+\s?', '$1 Cingulate'};...
    {'(?<![^S]\s)(An\w+|Mi\w+|Poste\w+)\s?VS\s?(An\w+|Mi\w+|Poste\w+)\s?(Cing\w+)', '$1 $3 VS $2 $3'};...
    {'(Pole|An\w+|Pre\w+|Me\w+)\s?VS\s?(Cing\w+)', '$1 VS Anterior $2'};...
    {'(SMA|S[Ee]\w+|M[Oo]\w+)\s?VS\s?(Cing\w+)', '$1 VS Middle $2'};...
    {'([Cc]uneus)\s?VS\s?(Cing\w+)', '$1 VS Posterior $2'};...
    {'(An\w+|Mi\w+|Po\w+)\s?(Cing\w+)\s?VS\s?(Sul\w+)', '$1 $2 VS $1 $2 $3'}];
labels = regexprep_series(labels, cingulate_series);

%%% Hippocampus Series
hippocampus_series = [{'(Am\w+\sVS)\s(Hip\w+)', '$1 Anterior $2'};...
    {'(Hip\w+)\sHEAD', 'Anterior $1'};...
    {'(Hip\w+)\sTAIL', 'Posterior $1'};...
    {'(Middle)\s?VS\s?(Hip\w+)', '$1 $2'};...
    {'(?<![^S]\s)(An\w+|Mi\w+|Poste\w+)\s?VS\s?(An\w+|Mi\w+|Poste\w+)\s?(Hippo\w+)', '$1 $3 VS $2 $3'}];
labels = regexprep_series(labels, hippocampus_series);

%%% PHG Series
phg_series = [{'(Sulcus)\s?(PHG)', '$1 VS $2'};...
    {'(?<=An\w+\s?Hippo\w+.+)(PHG)(?!\s[AP])', '$1 Anterior'};...
    {'(?<=Lin\w+\s?Gy\w+.+)(PHG)(?!\s[AP])', '$1 Posterior'};...
    {'(PHG)\s?(Po\w+)\s?VS\s?(Coll\w+\s?Su\w+)', '$1 $2 VS $3 $2'}];
labels = regexprep_series(labels, phg_series);

%%% Orbital Gyrus Series
orb_series = [{'(Poste\w+)\s?VS\s?(La\w+)\s?(Orb\w+\s?Gy\w+)', '$1 $3 VS $2 $3'};...
    {'(?<=Med\w+\s?Orb\w+\s?Gy\w+\s?VS\s?)(Sulcus)', 'Medial Orbital $1'};...
    {'(?<=[APL]\w+\s?Orb\w+\s?Gy\w+\s?VS\s?)(Sulcus)', 'Lateral Orbital $1'};...
    {'(?<![^S]\s?)(Sulcus)(?=\s?VS\s?An\w+\s?Orb\w+\s?Gy\w+)', 'Lateral Orbital $1'}];
labels = regexprep_series(labels, orb_series);

%%% Sulci Series
sulci_series = [{'(?<=Me\w+\s?Pre\w+\s?VS\s?)(Sulcus)', 'Anterior Cingulate $1'};...
    {'(Su\w+\s?Pa\w+)\s?(Lo\w+)\s?VS\s?(Sulcus)', '$1 $2 VS $1 $3'};...
    {'(?<=Fu\w+\s?Gy\w+\s?An\w+\s?VS\s?)(Sulcus)', 'Collateral $1 Anterior'};...
    {'(?<=Fu\w+\s?Gy\w+\s?\s?VS\s?)(Sulcus)', 'Collateral $1'};...
    {'^Sulcus$', 'Sylvian Fissure'}];
labels = regexprep_series(labels, sulci_series);

%%% Random Series
random_series = [{'P\w+\s?(Tuber)', '$1'};{'Mi\w+\s?(Heterotopia)', '$1'};...
    {'(Supra\w+\s?Gy\w+)\s?(Ju\w+)', '$1 VS Parietooccipital $2'};...
    {'^Posterior\s?VS\s?(Resection)', '$1'};...
    {'(Sulcus)\s?(Resection)', '$1 VS $2'};...
    {'REMNANT', 'Resection'};...
    {'VS\s?(Pars\s?Opercularis)', 'VS IFG $1'};...
    {'^Middle\s?VS\s?(Sulcus)', '$1'};];
labels = regexprep_series(labels, random_series);

%%% Anterior Posterior Series
antpos_series = [{'(Ante\w+|Poste\w+)\s?VS\s?(Occ\w+te\w+\s?Su\w+)', '$1 VS $1 $2'};...
    {'(?<![^S]\s)(Occ\w+te\w+\s?Su\w+)\s?(.*)\s?(Ant\w+|Pos\w+)', '$3 $1 $2 $3'};...
    {'(Precuneus)\s?VS\s?Anterior\s?(Cingulate)', '$1 VS Posterior $2'};...
    {'(Precuneus)\s?VS\s?(Pa\w+\s?Fi\w+)', 'Posterior $1 VS $2'};...
    {'(Precuneus)\s?VS\s?(Po\w+\s?Si\w+)', 'Anterior $1 VS $2'};...
    {'([IMS]TG) Middle', '$1'};...
    {'(?<=Anterior.+)(Collateral\s?Sulcus)(?!\s[AP])', '$1 Anterior'};...
    {'(?<=Lin\w+\s?Gy\w+.+)(Collateral\s?Sulcus)(?!\s[AP])', '$1 Posterior'};...
    {'(?<=Pe\w+\s?Co\w+.+)(Collateral\s?Sulcus)(?!\s[AP])', '$1 Posterior'};];
labels = regexprep_series(labels, antpos_series);

%%% Final Series
final_series = [{'\s{2, }', ' '};{'WM(?=\w)', 'WM '};{'WM\s(?!VS)', 'WM VS '};...
    {'VS([A-Z]\w+)', 'VS $1'};{'MOTOR', 'Motor'};{'SENSORY', 'Sensory'}];
labels = regexprep_series(labels, final_series);
labels = strtrim(labels);
labels = regexprep(labels, '\s?VS$', '');

end


function labels = regexprep_series(labels, series)

n_steps = size(series, 1);

for idx = 1:n_steps
    labels = regexprep(labels, series{idx, 1}, series{idx, 2});
end

end